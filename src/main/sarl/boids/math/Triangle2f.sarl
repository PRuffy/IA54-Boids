package boids.math

import framework.math.Shape2f
import framework.math.Tuple2f
import framework.math.Rectangle2f
import framework.math.Point2f
import static extension java.lang.Math.*

class Triangle2f extends Shape2f<Triangle2f>{
	val firstPoint = new Point2f 
	val secondPoint = new Point2f
	val thirdPoint = new Point2f
	
	new(x1 : float, y1 : float, x2 : float, y2 : float, x3 : float, y3 : float){
		this.firstPoint.set(x1, y1)
		this.secondPoint.set(x2, y2)
		this.thirdPoint.set(x3, y3)
	}
	
	//Calcul l'intersection des rectangle englobants les figures géométrique.
	//Une version faisant un calcul plus affiné en fonction des de la figure serait plus efficace
	def intersects(r : Shape2f<?>) : boolean {
		var rectangleOtherShape : Rectangle2f = r.getBounds
		var thisRectangle : Rectangle2f = r.getBounds
		return thisRectangle.intersects(rectangleOtherShape)
		
	}
	
	def translate(vector : Tuple2f<?>) : Triangle2f {
		new Triangle2f(
			this.firstPoint.x+vector.x,
			this.firstPoint.y + vector.y,
			this.secondPoint.x + vector.x,
			this.secondPoint.y + vector.y,
			this.thirdPoint.x + vector.x,
			this.thirdPoint.y + vector.y
			)
	}
	
	def getBounds : Rectangle2f {
		new Rectangle2f(
			max(this.firstPoint.x, max(this.secondPoint.x, this.thirdPoint.x)),
			max(this.firstPoint.y, max(this.secondPoint.y, this.thirdPoint.y)),
			min(this.firstPoint.x, min(this.secondPoint.x, this.thirdPoint.x)),
			min(this.firstPoint.y, min(this.secondPoint.y, this.thirdPoint.y))
		)
	}
	
	def getMaxDemiSize : float {
		//Max x - min x
		//max y - min y
		throw new UnsupportedOperationException("TODO: auto-generated method stub")
	}
	
}