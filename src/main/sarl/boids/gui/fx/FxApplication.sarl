package boids.gui.fx

import io.sarl.util.OpenEventSpace
import javafx.application.Application
import javafx.fxml.FXMLLoader
import javafx.stage.Stage
/** 
 * Abstract implementation of a JavaFX application.
 */
abstract class FxApplication extends Application {
			/** The JavaFX loader.
		 */
	var loader : FXMLLoader

	final def start(stage : Stage) {
		var candidate = consumeEventSpaceCandidate
		this.loader = stage.doApplicationStart
		if (loader !== null && loader.controller instanceof FxViewerController) {
			(loader.controller as FxViewerController).UISpace = candidate
		}
		stage.show
	}

	abstract def doApplicationStart(stage : Stage) : FXMLLoader

	def stop {
		super.stop
		if (loader !== null && loader.controller instanceof FxViewerController) {
			(loader.controller as FxViewerController).safeExit
		}
	}

	private static var eventSpaceCandidate : OpenEventSpace

	package static def setEventSpaceCandidate(^event : OpenEventSpace) {
		synchronized (typeof(FxApplication)) {
			eventSpaceCandidate = ^event
		}
	}

	private static def consumeEventSpaceCandidate : OpenEventSpace {
		synchronized (typeof(FxApplication)) {
			var candidate = eventSpaceCandidate
			eventSpaceCandidate = null
			return candidate
		}
	}

}
